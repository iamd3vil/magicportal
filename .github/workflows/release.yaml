name: Create Release using Rlsr

on:
  push:
    tags:
      - "*"

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-24.04
    permissions:
      contents: write # Needed to create GitHub releases

    services:
      docker:
        image: docker:dind
        options: --privileged --shm-size=2g
        volumes:
          - /var/run/docker.sock:/var/run/docker.sock:ro
    container:
      image: ubuntu:24.04

    steps:
      - name: Install curl
        run: |
          apt-get update
          apt-get install -y curl sudo unzip git

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          # Fetch all history and tags for changelog generation
          fetch-depth: 0
          fetch-tags: true

      - name: Mark the git repo as safe.
        run: |
          git config --global --add safe.directory $GITHUB_WORKSPACE

      - name: Check latest tag
        run: |
          # Check if the latest tag is already released
          LATEST_TAG=$(git describe --abbrev=0 --tags)
          echo "Latest tag: $LATEST_TAG"

      - name: Install rust
        uses: actions-rust-lang/setup-rust-toolchain@v1

      - name: Install cross-compilation tools
        uses: taiki-e/setup-cross-toolchain-action@v1
        with:
          # This doesn't matter for us since we explicitly use targets in the just commands.
          target: x86_64-unknown-linux-gnu

      - name: Run Rlsr Action
        uses: iamd3vil/rlsr-action@v0.2.0
        with:
          config-path: "rlsr.yml"
          # The GITHUB_TOKEN is automatically created by Actions
          github-token: ${{ secrets.GITHUB_TOKEN }}
          # Optional: Clean dist before build
          rm-dist: "true"
          # Optional: Skip publishing (for testing the build)
          # skip-publish: 'true'
